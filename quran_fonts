#!/usr/bin/env python3

"""
AUTHOR: Abdelrahman Salem
DATE: May 26, 2020
------------------------------------------------
USE CASE STATEMENT
------------------------------------------------
This script is used to download quran page fonts from `web.mushafmakkah.com`
"""

import requests
import argparse
import os

# ------------------------------------------------
# Command Line Arguments
# ------------------------------------------------
parser = argparse.ArgumentParser(description='Download Mushafmakkah Quran Page Fonts')
parser.add_argument('-l', '--log', help='Log scrapping data', action='store_true')

parser.add_argument('-fp', '--file-prefix', help='Set file name prefix', default='quran_page_')

parser.add_argument('-ps', '--page-start', help='Fetch from page', type=int, default=1)
parser.add_argument('-pe', '--page-end', help='Fetch to page', type=int, default=604)

parser.add_argument('-dir', '--directory', help='Set output directory', default='quran_fonts_data')

args = parser.parse_args()

# ------------------------------------------------
# Command Line Arguments
# ------------------------------------------------
URL = 'https://web.mushafmakkah.com/fonts2/QuranPage{0}.ttf'
TITLES_ULR = 'https://web.mushafmakkah.com/fonts/QuranTitles.192cecd.ttf'
FILE_NAME = args.directory.strip('/') + '/' + args.file_prefix + '{0}.ttf'

CSS_FONT_FACE = """
@font-face {{
  font-family: 'quran_{0}_{1}';
  src: url({{BASE_PATH}}/quran_{0}_{1}.ttf) format('truetype');
}}
"""

# ------------------------------------------------
# Utils
# ------------------------------------------------
def log(key, value):
    if args.log:
        print(key + ': ' + str(value))


# ------------------------------------------------
# Data
# ------------------------------------------------

css_font_definitions = []

# ------------------------------------------------
# Download
# ------------------------------------------------
if not os.path.exists(args.directory):
    os.makedirs(args.directory)

for page_number in range(args.page_start, args.page_end + 1):
    page_url = URL.format(page_number)
    page_request = requests.get(page_url)
    page_file = open(FILE_NAME.format(page_number), 'wb')
    page_file.write(page_request.content)
    page_file.close()
    log('Page', page_number)
    css_font_definitions.append(CSS_FONT_FACE.format('page', page_number))

titles_request = requests.get(TITLES_ULR)
titles_file = open(FILE_NAME.format('titles').replace('page', 'chapter'), 'wb')
titles_file.write(titles_request.content)
titles_file.close()
css_font_definitions.append(CSS_FONT_FACE.format('chapter', 'titles'))

css_file = open(FILE_NAME.format('fonts').replace('_css', '').replace('ttf', 'css'), 'w')
css_file.write("".join(css_font_definitions).strip())
css_file.close()